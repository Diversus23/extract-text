name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.11'
  IMAGE_NAME: text-extraction-api

jobs:
  lint:
    name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ (Linting)
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout –∫–æ–¥
      uses: actions/checkout@v4
      
    - name: üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –ª–∏–Ω—Ç–∏–Ω–≥–∞
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-lint.txt
        pip install -r requirements.txt
        
    - name: üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å Black
      run: |
        black --check --diff app/ tests/
        
    - name: üìè –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ —Å Flake8
      run: |
        python -m flake8 app/ tests/
        
    - name: üî§ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ —Å isort
      run: |
        isort --check-only --diff app/ tests/
        
    - name: üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Å MyPy (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
      run: |
        mypy app/ --ignore-missing-imports --no-strict-optional
      continue-on-error: true  # –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º CI –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö —Ç–∏–ø–∏–∑–∞—Ü–∏–∏
      
  test:
    name: üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Docker
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - name: üì• Checkout –∫–æ–¥
      uses: actions/checkout@v4
      
    - name: üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
      run: |
        make build
        
    - name: üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ Docker
      run: |
        make test-docker
        
    - name: üìä –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ–∫—Ä—ã—Ç–∏—è –≤ Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: üìÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –ø–æ–∫—Ä—ã—Ç–∏—è
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-reports
        path: |
          coverage_html/
          coverage.xml
          .coverage
        retention-days: 30

  test-matrix:
    name: üß™ –¢–µ—Å—Ç—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö Python –≤–µ—Ä—Å–∏—è—Ö
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        
    steps:
    - name: üì• Checkout –∫–æ–¥
      uses: actions/checkout@v4
      
    - name: üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr tesseract-ocr-rus tesseract-ocr-eng
        sudo apt-get install -y libreoffice-core antiword libmagic1
        sudo apt-get install -y libxml2-dev libxslt-dev
        
    - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        
    - name: üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
      run: |
        python -m pytest -v --cov=app --cov-report=term-missing --cov-report=xml --cov-fail-under=60
        
    - name: üìä –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è –¥–ª—è Python ${{ matrix.python-version }}
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: python-${{ matrix.python-version }}
        name: python-${{ matrix.python-version }}
        fail_ci_if_error: false

  security:
    name: üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout –∫–æ–¥
      uses: actions/checkout@v4
      
    - name: üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-lint.txt
        pip install -r requirements.txt
        
    - name: üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π —Å Safety
      run: |
        safety check --json || true  # –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —É—è–∑–≤–∏–º–æ—Å—Ç—è—Ö
        
    - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞ —Å Bandit
      run: |
        bandit -r app/ -f json -o bandit-report.json || true
        bandit -r app/ -f txt
      continue-on-error: true
      
    - name: üìÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
        retention-days: 30

  build-check:
    name: üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ Docker
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout –∫–æ–¥
      uses: actions/checkout@v4
      
    - name: üê≥ –°–±–æ—Ä–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:test .
        
    - name: üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ health check
      run: |
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ —Ñ–æ–Ω–µ
        docker run -d --name test-api -p 7555:7555 ${{ env.IMAGE_NAME }}:test
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        sleep 30
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
        curl -f http://localhost:7555/health || exit 1
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ endpoints
        curl -f http://localhost:7555/ || exit 1
        curl -f http://localhost:7555/v1/supported-formats || exit 1
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        docker stop test-api
        docker rm test-api

  notify:
    name: üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    runs-on: ubuntu-latest
    needs: [lint, test, test-matrix, security, build-check]
    if: always()
    
    steps:
    - name: üìä –°—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∫–∏
      run: |
        echo "üîç –õ–∏–Ω—Ç–∏–Ω–≥: ${{ needs.lint.result }}"
        echo "üß™ –¢–µ—Å—Ç—ã Docker: ${{ needs.test.result }}"
        echo "üß™ –¢–µ—Å—Ç—ã Matrix: ${{ needs.test-matrix.result }}"
        echo "üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: ${{ needs.security.result }}"
        echo "üê≥ –°–±–æ—Ä–∫–∞: ${{ needs.build-check.result }}"
        
        if [[ "${{ needs.lint.result }}" == "success" && 
              "${{ needs.test.result }}" == "success" && 
              "${{ needs.test-matrix.result }}" == "success" && 
              "${{ needs.build-check.result }}" == "success" ]]; then
          echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
        else
          echo "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏"
          exit 1
        fi 