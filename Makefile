# Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º Text Extraction API
IMAGE_NAME := text-extraction-api
TAG := latest

# –¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã –¥–ª—è –≤—ã–≤–æ–¥–∞
RED    := \033[31m
GREEN  := \033[32m
YELLOW := \033[33m
BLUE   := \033[34m
PURPLE := \033[35m
CYAN   := \033[36m
WHITE  := \033[37m
RESET  := \033[0m
BOLD   := \033[1m

.PHONY: help build dev prod stop logs test clean status

help: ## üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
	@echo "$(BOLD)$(CYAN)========================================$(RESET)"
	@echo "$(BOLD)$(CYAN)  Text Extraction API - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ$(RESET)"
	@echo "$(BOLD)$(CYAN)========================================$(RESET)"
	@echo ""
	@echo "$(BOLD)$(GREEN)üèóÔ∏è  –°–±–æ—Ä–∫–∞ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ:$(RESET)"
	@echo "  $(YELLOW)make build$(RESET)   - –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑"
	@echo "  $(YELLOW)make dev$(RESET)     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Å –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π)"
	@echo "  $(YELLOW)make prod$(RESET)    - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ (–≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ)"
	@echo ""
	@echo "$(BOLD)$(GREEN)üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º:$(RESET)"
	@echo "  $(YELLOW)make stop$(RESET)    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  $(YELLOW)make logs$(RESET)    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
	@echo "  $(YELLOW)make status$(RESET)  - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo ""
	@echo "$(BOLD)$(GREEN)üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:$(RESET)"
	@echo "  $(YELLOW)make test$(RESET)    - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API"
	@echo ""
	@echo "$(BOLD)$(GREEN)üßπ –û—á–∏—Å—Ç–∫–∞:$(RESET)"
	@echo "  $(YELLOW)make clean$(RESET)   - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, —Ç–æ–º–∞ –∏ —Å–µ—Ç–∏"
	@echo ""
	@echo "$(BOLD)$(PURPLE)üìñ –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞:$(RESET)"
	@echo "  API:           http://localhost:7555"
	@echo "  –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:  http://localhost:7555/docs"
	@echo "  Health check:  http://localhost:7555/health"
	@echo ""

build: ## üèóÔ∏è –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "$(BOLD)$(BLUE)üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞...$(RESET)"
	@docker build -t $(IMAGE_NAME):$(TAG) .
	@echo "$(GREEN)‚úÖ –û–±—Ä–∞–∑ $(IMAGE_NAME):$(TAG) —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω!$(RESET)"

dev: build ## üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BOLD)$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(RESET)"
	@echo "$(YELLOW)üìù –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–∫–ª—é—á–∞–µ—Ç:$(RESET)"
	@echo "  - –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–¥–∞"
	@echo "  - –ü—Ä–æ–±—Ä–æ—Å –ø–∞–ø–æ–∫ –¥–ª—è –≥–æ—Ä—è—á–µ–π –∑–∞–º–µ–Ω—ã"
	@echo "  - –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ –æ—Ç–ª–∞–¥–∫–∏"
	@echo ""
	@echo "$(CYAN)üåê API –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:7555$(RESET)"
	@echo "$(CYAN)üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:7555/docs$(RESET)"
	@echo ""
	@echo "$(YELLOW)–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C$(RESET)"
	@docker-compose -f docker-compose.yml up

prod: build ## üè≠ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
	@echo "$(BOLD)$(GREEN)üè≠ –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ...$(RESET)"
	@echo "$(YELLOW)üìù –†–µ–∂–∏–º –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –≤–∫–ª—é—á–∞–µ—Ç:$(RESET)"
	@echo "  - –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
	@echo "  - –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ —Å–±–æ—è—Ö"
	@echo "  - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
	@echo ""
	@docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ!$(RESET)"
	@echo "$(CYAN)üåê API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:7555$(RESET)"
	@echo "$(CYAN)üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:7555/docs$(RESET)"
	@echo ""
	@echo "$(YELLOW)–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: make logs$(RESET)"
	@echo "$(YELLOW)–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: make stop$(RESET)"

stop: ## üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(BOLD)$(RED)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(RESET)"
	@docker-compose -f docker-compose.yml -f docker-compose.prod.yml down
	@echo "$(GREEN)‚úÖ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!$(RESET)"

logs: ## üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@echo "$(BOLD)$(CYAN)üìã –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...$(RESET)"
	@echo "$(YELLOW)–î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C$(RESET)"
	@echo ""
	@docker-compose -f docker-compose.yml -f docker-compose.prod.yml logs -f

status: ## üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(BOLD)$(CYAN)üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:$(RESET)"
	@echo ""
	@docker-compose -f docker-compose.yml ps 2>/dev/null || echo "$(YELLOW)–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã$(RESET)"
	@echo ""
	@echo "$(BOLD)$(CYAN)üìà –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:$(RESET)"
	@docker stats --no-stream 2>/dev/null | grep text-extraction || echo "$(YELLOW)–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã$(RESET)"

test: ## üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
	@echo "$(BOLD)$(PURPLE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API...$(RESET)"
	@echo "$(YELLOW)üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–∞–µ—Ç:$(RESET)"
	@echo "  - –ü—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API"
	@echo "  - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"
	@echo "  - –û–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤"
	@echo "  - –ü—Ä–æ–≤–µ—Ä–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"
	@echo ""
	@if [ ! -f "./run_tests.sh" ]; then \
		echo "$(RED)‚ùå –§–∞–π–ª run_tests.sh –Ω–µ –Ω–∞–π–¥–µ–Ω!$(RESET)"; \
		exit 1; \
	fi
	@echo "$(CYAN)üèÉ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞...$(RESET)"
	@./run_tests.sh
	@echo ""
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!$(RESET)"
	@echo "$(YELLOW)üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ tests/ (—Ñ–∞–π–ª—ã *.ok.txt –∏ *.err.txt)$(RESET)"

clean: ## üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
	@echo "$(BOLD)$(RED)üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã...$(RESET)"
	@echo "$(YELLOW)‚ö†Ô∏è  –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã:$(RESET)"
	@echo "  - –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  - –í—Å–µ —Ç–æ–º–∞ Docker"
	@echo "  - –í—Å–µ —Å–µ—Ç–∏ Docker"
	@echo "  - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ (tests/*.ok.txt, tests/*.err.txt)"
	@echo ""
	@read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N) " -n 1 -r; \
	if [[ $$REPLY =~ ^[Yy]$$ ]]; then \
		echo ""; \
		echo "$(RED)üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ —Ç–æ–º–æ–≤...$(RESET)"; \
		docker-compose -f docker-compose.yml -f docker-compose.prod.yml down --volumes --remove-orphans; \
		echo "$(RED)üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤...$(RESET)"; \
		rm -f tests/*.ok.txt tests/*.err.txt tests/supported_formats.json 2>/dev/null || true; \
		echo "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞!$(RESET)"; \
	else \
		echo ""; \
		echo "$(YELLOW)–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞$(RESET)"; \
	fi

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
debug: ## üêõ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏
	@echo "$(BOLD)$(YELLOW)üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏...$(RESET)"
	@echo "$(CYAN)–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏$(RESET)"
	@docker-compose -f docker-compose.yml exec api /bin/bash

quick-test: ## ‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç API
	@echo "$(BOLD)$(BLUE)‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç API...$(RESET)"
	@if [ -f "quick_test.py" ]; then \
		python3 quick_test.py; \
	else \
		echo "$(RED)‚ùå –§–∞–π–ª quick_test.py –Ω–µ –Ω–∞–π–¥–µ–Ω!$(RESET)"; \
	fi

# –ü–æ–∫–∞–∑–∞—Ç—å help –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.DEFAULT_GOAL := help 