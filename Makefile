SHELL := /bin/bash
# Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º Text Extraction API
IMAGE_NAME := text-extraction-api
TAG := latest


.PHONY: help build up prod-up down logs test test-unit test-integration test-coverage test-legacy clean status lint format lint-check install-linters

help: ## üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
	@echo "================================================"
	@echo "  Text Extraction API - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
	@echo "================================================"
	@echo ""
	@echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ:"
	@echo "  make build   - –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑"
	@echo "  make up      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Å –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π)"
	@echo "  make prod-up - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ (–≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ)"
	@echo ""
	@echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º:"
	@echo "  make down    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  make logs    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
	@echo "  make status  - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo ""
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
	@echo "  make test         - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º"
	@echo "  make test-unit    - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ unit —Ç–µ—Å—Ç—ã"
	@echo "  make test-integration - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ integration —Ç–µ—Å—Ç—ã"
	@echo "  make test-docker  - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
	@echo "  make test-coverage - –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
	@echo "  make test-legacy  - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã"
	@echo ""
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞:"
	@echo "  make install-linters - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞"
	@echo "  make lint        - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –≤—Å–µ–º–∏ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏"
	@echo "  make lint-check  - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –±–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"
	@echo "  make format      - –ê–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ (black + isort)"
	@echo ""
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞:"
	@echo "  make clean   - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, —Ç–æ–º–∞ –∏ —Å–µ—Ç–∏"
	@echo ""
	@echo "üìñ –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞:"
	@echo "  API:           http://localhost:7555"
	@echo "  –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:  http://localhost:7555/docs"
	@echo "  Health check:  http://localhost:7555/health"
	@echo ""

build: ## üèóÔ∏è –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
	@docker build -t $(IMAGE_NAME):$(TAG) .
	@echo "‚úÖ –û–±—Ä–∞–∑ $(IMAGE_NAME):$(TAG) —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω!"

up: build ## üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@echo "üìù –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–∫–ª—é—á–∞–µ—Ç:"
	@echo "  - –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–¥–∞"
	@echo "  - –ü—Ä–æ–±—Ä–æ—Å –ø–∞–ø–æ–∫ –¥–ª—è –≥–æ—Ä—è—á–µ–π –∑–∞–º–µ–Ω—ã"
	@echo "  - –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ –æ—Ç–ª–∞–¥–∫–∏"
	@echo ""
	@echo "üåê API –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:7555"
	@echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:7555/docs"
	@echo ""
	@echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
	@docker-compose -f docker-compose.yml up

prod-up: build ## üè≠ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
	@echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
	@git pull
	@echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω!"
	@make stop
	@echo "üè≠ –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ..."
	@echo "üìù –†–µ–∂–∏–º –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –≤–∫–ª—é—á–∞–µ—Ç:"
	@echo "  - –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
	@echo "  - –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ —Å–±–æ—è—Ö"
	@echo "  - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
	@echo ""
	@docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --build
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ!"
	@echo "üåê API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:7555"
	@echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:7555/docs"
	@echo ""
	@echo "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: make logs"
	@echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: make stop"

down: ## üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	@docker-compose -f docker-compose.yml -f docker-compose.prod.yml down
	@echo "‚úÖ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

logs: ## üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@echo "üìã –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	@echo "–î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
	@echo ""
	@docker-compose -f docker-compose.yml -f docker-compose.prod.yml logs -f

status: ## üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
	@echo ""
	@docker-compose -f docker-compose.yml ps 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
	@echo ""
	@echo "üìà –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
	@docker stats --no-stream 2>/dev/null | grep text-extraction || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"

test: ## üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞..."
	@echo "üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–∞–µ—Ç:"
	@echo "  - Unit —Ç–µ—Å—Ç—ã –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"
	@echo "  - Integration —Ç–µ—Å—Ç—ã API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"
	@echo "  - –¢–µ—Å—Ç—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏"
	@echo "  - –ò–∑–º–µ—Ä–µ–Ω–∏–µ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞"
	@echo "  - –ü—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
	@echo ""
	@echo "üîß –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	@if python3 -m pip install -q -r requirements-test.txt; then \
		echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ"; \
		echo "üèÉ –ó–∞–ø—É—Å–∫ pytest —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º..."; \
		python -m pytest -v --cov=app --cov-report=term-missing --cov-report=html:coverage_html --cov-fail-under=60 || echo "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏"; \
	else \
		echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–æ"; \
		echo "üê≥ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Docker..."; \
		$(MAKE) test-docker; \
	fi
	@echo ""
	@echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
	@echo "üìÅ –û—Ç—á–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:"
	@echo "  - HTML –æ—Ç—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è: coverage_html/index.html"
	@echo "  - XML –æ—Ç—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è: coverage.xml"
	@echo ""

test-unit: ## üî¨ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ unit —Ç–µ—Å—Ç—ã
	@echo "üî¨ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤..."
	@python3 -m pip install -q -r requirements-test.txt || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@python -m pytest tests/ -m unit -v --cov=app --cov-report=term-missing

test-integration: ## üîó –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ integration —Ç–µ—Å—Ç—ã
	@echo "üîó –ó–∞–ø—É—Å–∫ integration —Ç–µ—Å—Ç–æ–≤..."
	@python3 -m pip install -q -r requirements-test.txt || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@python -m pytest tests/ -m integration -v --cov=app --cov-report=term-missing

test-coverage: ## üìä –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
	@echo "üìä –û—Ç–∫—Ä—ã—Ç–∏–µ –æ—Ç—á–µ—Ç–∞ –ø–æ–∫—Ä—ã—Ç–∏—è..."
	@if [ -f "coverage_html/index.html" ]; then \
		python -c "import webbrowser; webbrowser.open('coverage_html/index.html')" 2>/dev/null || \
		echo "–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª coverage_html/index.html –≤ –±—Ä–∞—É–∑–µ—Ä–µ"; \
	else \
		echo "‚ùå –û—Ç—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'make test' —Å–Ω–∞—á–∞–ª–∞."; \
	fi

test-legacy: ## üìú –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
	@echo "üìú –ó–∞–ø—É—Å–∫ —Å—Ç–∞—Ä—ã—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
	@if [ -f "./run_tests.sh" ]; then \
		./run_tests.sh; \
	else \
		echo "‚ùå –§–∞–π–ª run_tests.sh –Ω–µ –Ω–∞–π–¥–µ–Ω!"; \
	fi

test-docker: build ## üê≥ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üê≥ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Docker..."
	@echo "üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏:"
	@echo "  - –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
	@echo "  - –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Python 3.10+"
	@echo "  - –ü–æ–ª–Ω–∞—è –∏–∑–æ–ª—è—Ü–∏—è –æ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
	@echo ""
	@echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
	@docker run --rm -v $(shell pwd):/code -w /code $(IMAGE_NAME):$(TAG) \
		bash -c "python3 -m pip install -q pytest==7.4.4 pytest-asyncio==0.23.2 pytest-cov==4.1.0 httpx==0.25.2 pytest-mock==3.12.0 requests==2.31.0 && \
		python -m pytest -v --cov=app --cov-report=term-missing --cov-report=html:coverage_html --cov-report=xml:coverage.xml --cov-fail-under=60" || \
		echo "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏"
	@echo ""
	@echo "‚úÖ Docker —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞
install-linters: ## üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞
	@echo "üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞..."
	@python3 -m pip install --upgrade pip
	@python3 -m pip install -r requirements-lint.txt
	@echo "‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

lint: install-linters ## üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –≤—Å–µ–º–∏ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –≤—Å–µ–º–∏ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏..."
	@echo ""
	@echo "üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å Black..."
	@python3 -m black --check --diff app/ tests/ || echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
	@echo ""
	@echo "üìè –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ —Å Flake8..."
	@python3 -m flake8 app/ tests/ || echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –Ω–∞—Ä—É—à–µ–Ω–∏—è —Å—Ç–∏–ª—è –∫–æ–¥–∞"
	@echo ""
	@echo "üî§ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ —Å isort..."
	@python3 -m isort --check-only --diff app/ tests/ || echo "‚ö†Ô∏è –ò–º–ø–æ—Ä—Ç—ã –Ω–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã"
	@echo ""
	@echo "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Å MyPy..."
	@python3 -m mypy app/ --ignore-missing-imports --no-strict-optional || echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Ç–∏–ø–∏–∑–∞—Ü–∏–∏"
	@echo ""
	@echo "üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å Bandit..."
	@python3 -m bandit -r app/ || echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏"
	@echo ""
	@echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å Safety..."
	@python3 -m safety check || echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã —É—è–∑–≤–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo ""
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

lint-check: install-linters ## üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –±–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –±–µ–∑ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π..."
	@echo ""
	@echo "üé® Black (—Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞)..."
	@python3 -m black --check app/ tests/
	@echo ""
	@echo "üìè Flake8..."
	@python3 -m flake8 app/ tests/
	@echo ""
	@echo "üî§ isort (—Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞)..."
	@python3 -m isort --check-only app/ tests/
	@echo ""
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

format: install-linters ## üé® –ê–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
	@echo "üé® –ê–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	@echo ""
	@echo "üî§ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ —Å isort..."
	@python3 -m isort app/ tests/
	@echo ""
	@echo "üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å Black..."
	@python3 -m black app/ tests/
	@echo ""
	@echo "‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

clean: ## üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
	@echo "üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
	@echo "‚ö†Ô∏è  –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã:"
	@echo "  - –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  - –í—Å–µ —Ç–æ–º–∞ Docker"
	@echo "  - –í—Å–µ —Å–µ—Ç–∏ Docker"
	@echo "  - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ (tests/*.ok.txt, tests/*.err.txt)"
	@echo "  - –û—Ç—á–µ—Ç—ã –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞ (.coverage, coverage_html/, coverage.xml)"
	@echo ""
	@read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N) " -n 1 -r; \
	if [[ $$REPLY =~ ^[Yy]$$ ]]; then \
		echo ""; \
		echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ —Ç–æ–º–æ–≤..."; \
		docker-compose -f docker-compose.yml -f docker-compose.prod.yml down --volumes --remove-orphans; \
		echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤..."; \
		rm -f tests/*.ok.txt tests/*.err.txt tests/supported_formats.json 2>/dev/null || true; \
		echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–∫—Ä—ã—Ç–∏—è..."; \
		rm -rf coverage_html/ .coverage coverage.xml .pytest_cache/ __pycache__/ 2>/dev/null || true; \
		echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞!"; \
	else \
		echo ""; \
		echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"; \
	fi

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
debug: ## üêõ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏
	@echo "üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏..."
	@echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏"
	@docker-compose -f docker-compose.yml exec api /bin/bash

quick-test: ## ‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç API
	@echo "‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç API..."
	@if [ -f "quick_test.py" ]; then \
		python3 quick_test.py; \
	else \
		echo "‚ùå –§–∞–π–ª quick_test.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"; \
	fi

# –ü–æ–∫–∞–∑–∞—Ç—å help –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.DEFAULT_GOAL := help 