#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
set -e

API_URL="http://localhost:7555"
TESTS_DIR="./tests"

echo "=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Text Extraction API ==="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API..."
if ! curl -s "$API_URL/health" | grep -q "ok"; then
    echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω."
    echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –∫–æ–º–∞–Ω–¥–æ–π: make dev"
    exit 1
fi

echo "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω"

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
echo "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤..."
if curl -s "$API_URL/v1/supported-formats" | jq . > "$TESTS_DIR/supported_formats.json" 2>/dev/null; then
    echo "‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ supported_formats.json"
else
    echo "‚ö†Ô∏è jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤"
fi

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤
echo "–û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤..."
rm -f "$TESTS_DIR"/*.ok.txt "$TESTS_DIR"/*.err.txt

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $TESTS_DIR..."

total_files=0
success_count=0
error_count=0

for file in "$TESTS_DIR"/*; do
    if [[ -f "$file" ]]; then
        filename=$(basename "$file")
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã
        if [[ "$filename" == "supported_formats.json" || "$filename" == *.ok.txt || "$filename" == *.err.txt ]]; then
            continue
        fi
        
        total_files=$((total_files + 1))
        
        echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $filename"
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        temp_response=$(mktemp)
        http_code=$(curl -s -w "%{http_code}" -X POST \
            -F "file=@$file" \
            "$API_URL/v1/extract/file" \
            --output "$temp_response")
        
        # –ß—Ç–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        body=$(cat "$temp_response")
        rm -f "$temp_response"
        
        if [[ "$http_code" -eq 200 ]]; then
            # –£—Å–ø–µ—à–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó
            if command -v jq >/dev/null 2>&1; then
                echo "$body" | jq -r '.text' > "$TESTS_DIR/${filename}.ok.txt"
            else
                # –ï—Å–ª–∏ jq –Ω–µ—Ç, –∏–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ—Å—Ç—ã–º —Å–ø–æ—Å–æ–±–æ–º (–±–µ–∑ sed –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
                echo "$body" > "$TESTS_DIR/${filename}.ok.txt"
            fi
            echo "‚úÖ $filename - –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ"
            success_count=$((success_count + 1))
        else
            # –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—à–∏–±–∫—É —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó
            echo "$body" > "$TESTS_DIR/${filename}.err.txt"
            echo "‚ùå $filename - –æ—à–∏–±–∫–∞ (HTTP $http_code)"
            error_count=$((error_count + 1))
        fi
    fi
done

echo ""
echo "=== –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ==="
echo "–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: $total_files"
echo "–£—Å–ø–µ—à–Ω–æ: $success_count"
echo "–û—à–∏–±–æ–∫: $error_count"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
echo ""
echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º–∞—Ç–æ–≤ ==="

if [[ -f "$TESTS_DIR/supported_formats.json" ]] && command -v jq >/dev/null 2>&1; then
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–∑ API (–∏–∑ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π)
    supported_extensions=($(jq -r '.[] | .[]' "$TESTS_DIR/supported_formats.json" 2>/dev/null | sort -u))
    
    # –°–æ–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    tested_extensions=()
    for file in "$TESTS_DIR"/*; do
        if [[ -f "$file" ]]; then
            filename=$(basename "$file")
            
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã
            if [[ "$filename" == "supported_formats.json" || "$filename" == *.ok.txt || "$filename" == *.err.txt ]]; then
                continue
            fi
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ—Å—Ç–∞–≤–Ω—ã–º, –Ω–∞–ø—Ä–∏–º–µ—Ä .image.pdf)
            if [[ "$filename" == *.* ]]; then
                extension="${filename##*.}"
                tested_extensions+=("$extension")
            fi
        fi
    done
    
    # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º
    tested_extensions=($(printf '%s\n' "${tested_extensions[@]}" | sort -u))
    
    # –ù–∞—Ö–æ–¥–∏–º –Ω–µ–ø–æ–∫—Ä—ã—Ç—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
    uncovered_extensions=()
    for ext in "${supported_extensions[@]}"; do
        found=false
        for tested_ext in "${tested_extensions[@]}"; do
            if [[ "$ext" == "$tested_ext" ]]; then
                found=true
                break
            fi
        done
        if [[ "$found" == false ]]; then
            uncovered_extensions+=("$ext")
        fi
    done
    
    # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∫—Ä—ã—Ç–∏—è
    if [[ ${#supported_extensions[@]} -gt 0 ]]; then
        covered_count=$(( ${#supported_extensions[@]} - ${#uncovered_extensions[@]} ))
        coverage_percent=$(( covered_count * 100 / ${#supported_extensions[@]} ))
    else
        coverage_percent=0
    fi
    
    echo "üìä –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: ${#supported_extensions[@]}"
    echo "üß™ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: ${#tested_extensions[@]}"
    echo "üìà –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏: ${coverage_percent}%"
    
    if [[ ${#uncovered_extensions[@]} -eq 0 ]]; then
        echo "‚úÖ –í—Å–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –ø–æ–∫—Ä—ã—Ç—ã —Ç–µ—Å—Ç–∞–º–∏!"
    else
        echo "‚ö†Ô∏è  –ù–µ–ø–æ–∫—Ä—ã—Ç—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã (${#uncovered_extensions[@]}):"
        for ext in "${uncovered_extensions[@]}"; do
            # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ñ–æ—Ä–º–∞—Ç–∞ –∏–∑ API –æ—Ç–≤–µ—Ç–∞
            category=$(jq -r --arg ext "$ext" 'to_entries[] | select(.value[] == $ext) | .key' "$TESTS_DIR/supported_formats.json" 2>/dev/null | head -1)
            if [[ -n "$category" && "$category" != "null" ]]; then
                echo "  üî∏ .$ext ($category)"
            else
                echo "  üî∏ .$ext"
            fi
        done
        echo ""
        echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –¥–æ–±–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –Ω–µ–ø–æ–∫—Ä—ã—Ç—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤"
    fi
else
    echo "‚ö†Ô∏è –ù–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤ (—Ç—Ä–µ–±—É–µ—Ç—Å—è jq –∏ supported_formats.json)"
fi

echo ""
echo "üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ tests/:"
if [[ $success_count -gt 0 ]]; then
    echo "  ‚úÖ –£—Å–ø–µ—à–Ω—ã–µ: tests/*.ok.txt"
fi
if [[ $error_count -gt 0 ]]; then
    echo "  ‚ùå –û—à–∏–±–∫–∏: tests/*.err.txt"
fi

if [[ $error_count -eq 0 ]]; then
    echo ""
    echo "üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    exit 0
else
    echo ""
    echo "‚ö†Ô∏è –ï—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–∞—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã *.err.txt –≤ –ø–∞–ø–∫–µ tests/"
    exit 1
fi 