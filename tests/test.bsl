//////////////////////////////////////////////////////////////////////////////////
// Модуль для работы с текстовыми данными в 1С:Предприятие
// Тестовый файл для проверки извлечения текста из исходного кода 1С
//
// Версия: 1.0
// Автор: Тестовый разработчик
//////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

Перем СистемныеПараметры;
Перем КэшТекстовыхДанных;
Перем НастройкиОбработки;

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Функция обрабатывает входной текст и возвращает результат
//
// Параметры:
//  ВходнойТекст - Строка - текст для обработки
//  НастройкиОбработки - Структура - параметры обработки
//
// Возвращаемое значение:
//  Структура - результат обработки с полями:
//   * ОбработанныйТекст - Строка
//   * КоличествоСимволов - Число
//   * КоличествоСтрок - Число
//
Функция ОбработатьТекст(ВходнойТекст, НастройкиОбработки = Неопределено) Экспорт
	
	Если НастройкиОбработки = Неопределено Тогда
		НастройкиОбработки = ПолучитьНастройкиПоУмолчанию();
	КонецЕсли;
	
	// Проверка входных параметров
	Если НЕ ЗначениеЗаполнено(ВходнойТекст) Тогда
		ВызватьИсключение "Не заполнен обязательный параметр 'ВходнойТекст'";
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ОбработанныйТекст", "");
	Результат.Вставить("КоличествоСимволов", 0);
	Результат.Вставить("КоличествоСтрок", 0);
	
	Попытка
		
		// Основная обработка текста
		ОбработанныйТекст = СтрЗаменить(ВходнойТекст, Символы.ВК, Символы.ПС);
		
		Если НастройкиОбработки.УдалитьЛишниеПробелы Тогда
			ОбработанныйТекст = СокрЛП(ОбработанныйТекст);
		КонецЕсли;
		
		Если НастройкиОбработки.ПриводитьКВерхнемуРегистру Тогда
			ОбработанныйТекст = ВРег(ОбработанныйТекст);
		ИначеЕсли НастройкиОбработки.ПриводитьКНижнемуРегистру Тогда
			ОбработанныйТекст = НРег(ОбработанныйТекст);
		КонецЕсли;
		
		// Подсчет статистики
		Результат.ОбработанныйТекст = ОбработанныйТекст;
		Результат.КоличествоСимволов = СтрДлина(ОбработанныйТекст);
		Результат.КоличествоСтрок = СтрЧислоСтрок(ОбработанныйТекст);
		
		// Кэширование результата
		Если НастройкиОбработки.ИспользоватьКэш Тогда
			СохранитьВКэш(ВходнойТекст, Результат);
		КонецЕсли;
		
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ОбработкаТекста.ОшибкаОбработки", 
			УровеньЖурналаРегистрации.Ошибка,, ВходнойТекст, ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

// Процедура выполняет пакетную обработку массива текстов
//
// Параметры:
//  МассивТекстов - Массив из Строка - тексты для обработки
//  НастройкиОбработки - Структура - параметры обработки
//
Процедура ОбработатьПакетТекстов(МассивТекстов, НастройкиОбработки = Неопределено) Экспорт
	
	Если НастройкиОбработки = Неопределено Тогда
		НастройкиОбработки = ПолучитьНастройкиПоУмолчанию();
	КонецЕсли;
	
	КоличествоЭлементов = МассивТекстов.Количество();
	
	Для Индекс = 0 По КоличествоЭлементов - 1 Цикл
		
		ТекущийТекст = МассивТекстов[Индекс];
		
		Если ЗначениеЗаполнено(ТекущийТекст) Тогда
			РезультатОбработки = ОбработатьТекст(ТекущийТекст, НастройкиОбработки);
			МассивТекстов[Индекс] = РезультатОбработки.ОбработанныйТекст;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция возвращает настройки обработки по умолчанию
//
// Возвращаемое значение:
//  Структура - настройки с полями:
//   * УдалитьЛишниеПробелы - Булево
//   * ПриводитьКВерхнемуРегистру - Булево
//   * ПриводитьКНижнемуРегистру - Булево
//   * ИспользоватьКэш - Булево
//
Функция ПолучитьНастройкиПоУмолчанию()
	
	Настройки = Новый Структура;
	Настройки.Вставить("УдалитьЛишниеПробелы", Истина);
	Настройки.Вставить("ПриводитьКВерхнемуРегистру", Ложь);
	Настройки.Вставить("ПриводитьКНижнемуРегистру", Ложь);
	Настройки.Вставить("ИспользоватьКэш", Истина);
	
	Возврат Настройки;
	
КонецФункции

// Процедура сохраняет результат в кэш
//
// Параметры:
//  ИсходныйТекст - Строка - исходный текст
//  РезультатОбработки - Структура - результат обработки
//
Процедура СохранитьВКэш(ИсходныйТекст, РезультатОбработки)
	
	Если КэшТекстовыхДанных = Неопределено Тогда
		КэшТекстовыхДанных = Новый Соответствие;
	КонецЕсли;
	
	КлючКэша = Строка(Новый УникальныйИдентификатор) + "_" + Формат(ТекущаяДатаСеанса(), "ДФ=yyyyMMddHHmmss");
	КэшТекстовыхДанных.Вставить(КлючКэша, РезультатОбработки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура инициализации модуля
//
Процедура ИнициализацияМодуля()
	
	СистемныеПараметры = Новый Структура;
	СистемныеПараметры.Вставить("ВерсияМодуля", "1.0");
	СистемныеПараметры.Вставить("ДатаСоздания", '20250125');
	СистемныеПараметры.Вставить("Автор", "Тестовый разработчик");
	
	КэшТекстовыхДанных = Новый Соответствие;
	НастройкиОбработки = ПолучитьНастройкиПоУмолчанию();
	
КонецПроцедуры

// Инициализация при загрузке модуля
ИнициализацияМодуля(); 