#!/bin/bash

# –¢–µ—Å—Ç–æ–≤—ã–π Shell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
# –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ bash

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_NAME="text-extraction-api"
VERSION="1.7.0"
LOG_FILE="/tmp/extraction.log"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    local level="$1"
    local message="$2"
    echo "$(date '+%Y-%m-%d %H:%M:%S') [$level] $message" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log_message "INFO" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    local deps=("python3" "docker" "make" "curl")
    
    for dep in "${deps[@]}"; do
        if command -v "$dep" &> /dev/null; then
            log_message "INFO" "‚úÖ $dep –Ω–∞–π–¥–µ–Ω"
        else
            log_message "ERROR" "‚ùå $dep –Ω–µ –Ω–∞–π–¥–µ–Ω"
            return 1
        fi
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
deploy_application() {
    log_message "INFO" "–ù–∞—á–∞–ª–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è $PROJECT_NAME v$VERSION"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    check_dependencies || exit 1
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p {logs,data,backups}
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
    if [[ -d ".git" ]]; then
        git pull origin main
        log_message "INFO" "–ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
    docker build -t "$PROJECT_NAME:$VERSION" .
    log_message "INFO" "Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω"
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    make test
    log_message "INFO" "–¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã"
    
    # –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
    docker-compose up -d
    log_message "INFO" "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
    sleep 5
    if curl -f http://localhost:7555/health; then
        log_message "INFO" "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    else
        log_message "ERROR" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏"
        exit 1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    "deploy")
        deploy_application
        ;;
    "check")
        check_dependencies
        ;;
    "logs")
        tail -f "$LOG_FILE"
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {deploy|check|logs}"
        echo "  deploy - —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
        echo "  check  - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
        echo "  logs   - –ø–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        exit 1
        ;;
esac 